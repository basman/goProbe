# TODO: generated by ChatGPT: double check!!
openapi: 3.0.0
info:
  title: Query API
  version: 1.0.0
servers:
  - url: http://localhost:8145
paths:
  /_query:
    get:
      summary: Perform a query
      parameters:
        - name: query
          in: query
          description: The query type such as sip, dip
          required: true
          schema:
            type: string
        - name: ifaces
          in: query
          description: The interfaces to query
          required: true
          schema:
            type: string
        - name: host_query
          in: query
          description: The hosts for which data is queried
          schema:
            type: string
        - name: hostname
          in: query
          description: The hostname for which data is queried
          schema:
            type: string
        - name: host_id
          in: query
          description: The host id for which data is queried
          schema:
            type: integer
        - name: condition
          in: query
          description: The condition to filter data by (e.g. "port=80")
          schema:
            type: string
        - name: in
          in: query
          description: Only show incoming packets/bytes
          schema:
            type: boolean
        - name: out
          in: query
          description: Only show outgoing packets/bytes
          schema:
            type: boolean
        - name: sum
          in: query
          description: Show sum of incoming/outgoing packets/bytes
          schema:
            type: boolean
        - name: first
          in: query
          description: The first timestamp to query
          schema:
            type: string
        - name: last
          in: query
          description: The last timestamp to query
          schema:
            type: string
        - name: format
          in: query
          description: The output format (json, csv, table)
          schema:
            type: string
        - name: sort_by
          in: query
          description: Column to sort by (packets or bytes)
          schema:
            type: string
        - name: num_results
          in: query
          description: Number of results to return/print
          schema:
            type: integer
        - name: sort_ascending
          in: query
          description: Sort ascending instead of the default descending
          schema:
            type: boolean
        - name: list
          in: query
          description: Only list interfaces and return
          schema:
            type: boolean
        - name: version
          in: query
          description: Only print version and return
          schema:
            type: boolean
        - name: dns_resolution.enabled
          in: query
          description: Enable reverse DNS lookups
          schema:
            type: boolean
        - name: dns_resolution.timeout
          in: query
          description: Timeout for reverse DNS lookups
          schema:
            type: string
        - name: dns_resolution.max_rows
          in: query
          description: Maximum number of rows to resolve
          schema:
            type: integer
        - name: max_mem_pct
          in: query
          description: Maximum percentage of available host memory to use for query processing
          schema:
            type: integer
        - name: low_mem
          in: query
          description: Use less memory for query processing
          schema:
            type: boolean
        - name: caller
          in: query
          description: Stores who produced these args (caller)
          schema:
            type: string
        - name: live
          in: query
          description: Request live flow data (in addition to DB results)
          schema:
            type: boolean
      responses:
        '200':
          description: Successful query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'

components:
  schemas:
    Result:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        hosts_statuses:
          $ref: '#/components/schemas/HostsStatuses'
        summary:
          $ref: '#/components/schemas/Summary'
        query:
          $ref: '#/components/schemas/Query'
        rows:
          $ref: '#/components/schemas/Rows'

    Status:
      type: object
      properties:
        code:
          type: string
          description: The status code
        message:
          type: string
          description: An optional message

    HostsStatuses:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Status'

    Summary:
      type: object
      properties:
        interfaces:
          type: array
          items:
            type: string
          description: The interfaces that were queried
        totals:
          $ref: '#/components/schemas/Counters'
        timings:
          $ref: '#/components/schemas/Timings'
        hits:
          $ref: '#/components/schemas/Hits'
        time_first:
          type: string
          format: date-time
          description: The start of the interval
        time_last:
          type: string
          format: date-time
          description: The end of the interval

    Query:
      type: object
      properties:
        attributes:
          type: array
          items:
            type: string
          description: The query attributes
        condition:
          type: string
          description: The query condition

    Rows:
      type: array
      items:
        $ref: '#/components/schemas/Row'

    Timings:
      type: object
      properties:
        query_start:
          type: string
          format: date-time
          description: The time when the query started
        query_duration_ns:
          type: integer
          description: The time it took to run the query in nanoseconds
        resolution_duration:
          type: integer
          description: The time it took to resolve all IPs in nanoseconds

    Hits:
      type: object
      properties:
        displayed:
          type: integer
          description: How many flow records were returned in Rows
        total:
          type: integer
          description: How many flow records were returned in total

    Row:
      type: object
      properties:
        labels:
          $ref: '#/components/schemas/Labels'
        attributes:
          $ref: '#/components/schemas/Attributes'
        counters:
          $ref: '#/components/schemas/Counters'

    Labels:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: The timestamp of the 5-minute interval storing the flow record
        iface:
          type: string
          description: The interface on which the flow was observed
        host:
          type: string
          description: The hostname of the host on which the flow was observed
        host_id:
          type: string
          description: The host id of the host on which the flow was observed

    Attributes:
      type: object
      properties:
        sip:
          type: string
          description: The source IP address
        dip:
          type: string
          description: The destination IP address
        proto:
          type: integer
          description: The IP protocol number
        dport:
          type: integer
          description: The destination port

    Counters:
      type: object
      properties:
        br:
          type: integer
          description: Bytes received
        bs:
          type: integer
          description: Bytes sent
        pr:
          type: integer
          description: Packets received
        ps:
          type: integer
          description: Packets sent
